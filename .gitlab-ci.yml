before_script:
  - git lfs pull


stages:
    - test
    - deploy


test_enpt:
  stage: test
  script:
    - source /root/anaconda3/bin/activate
    - export GDAL_DATA=/root/anaconda3/share/gdal
    - export PYTHONPATH=$PYTHONPATH:/root  # /root <- here are the sicor tables
    - pip install cerberus jsmin  # FIXME remove that as soon as docker CI runner is rebuilt
    - pip install unittest --upgrade
    # run nosetests
    - make nosetests  # test are called here
    # create the docs
    - make docs
  artifacts:
    paths:
    - htmlcov/
    - docs/_build/html/
    - nosetests.html
    - nosetests.xml
    - tests/linting
  when: always


test_styles:
  stage: test
  script:
    - source /root/anaconda3/bin/activate
    - export GDAL_DATA=/root/anaconda3/share/gdal
    - export PYTHONPATH=$PYTHONPATH:/root  # /root <- directory needed later
    - make lint
  artifacts:
    paths:
    - tests/linting/flake8.log
    - tests/linting/pycodestyle.log
    - tests/linting/pydocstyle.log
    when: always


test_enpt_install:
  stage: test
  script:
    - source /root/anaconda3/bin/activate
    - conda create -y -q --name enpt python=3
    - source activate enpt
    # install some dependencies that cause trouble when installed via pip
    - conda install -y -c conda-forge scipy  # scikit-image, matplotlib
    # install not pip-installable deps of geoarray
    - conda install -y -c conda-forge numpy scikit-image matplotlib pandas gdal rasterio pyproj basemap shapely
    - conda install -y -c conda-forge 'icu=58.*' lxml  # fixes bug for conda-forge gdal build
    # install enpt
    - make install
    - cd ..
    - pwd
    - ls
    # test importability
    - python -c "import enpt; print(enpt)"
    - python -c "from enpt.model.images import EnMAPL1Product_SensorGeo"


pages:
  stage: deploy
  dependencies:
    - test_enpt
  script:
    # Create the public directory
    - rm -rf public
    - mkdir public
    - mkdir -p public/doc
    - mkdir -p public/coverage
    - mkdir -p public/nosetests_reports
    # Copy over the docs
    - cp -r docs/_build/html/* public/doc/
    # Copy over the coverage reports
    - cp -r htmlcov/* public/coverage/
    # Copy over the nosetests reports
    - cp nosetests.* public/nosetests_reports/
    # Check if everything is working great
    - ls -al public
    - ls -al public/doc
    - ls -al public/coverage
    - ls -al public/nosetests_reports
  artifacts:
    paths:
      - public
    expire_in: 600 days
