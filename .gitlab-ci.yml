before_script:
  - git lfs install
  - git lfs pull


stages:
    - test
    - deploy


test_enpt:
  stage: test
  coverage: '/TOTAL\s+\d+\s+\d+\s+(\d+%)/'
  script:
    - source activate ci_env

    # update some dependencies
    # - pip install 'geoarray>=0.15.8'
    # - pip install 'py_tools_ds>=0.14.23'
    - mamba install "sicor>=0.19.1"

    # install sicor and perhaps switch sicor branch
    # - rm -rf context/sicor
    # - git clone https://git.gfz-potsdam.de/EnMAP/sicor.git ./context/sicor
    # # - git clone -b dev https://git.gfz-potsdam.de/EnMAP/sicor.git ./context/sicor
    # - cd ./context/sicor
    # - git lfs install
    # - git lfs pull
    # - pip install -e .
    # - cd ../../

    # run tests
    - make pytest  # test are called here

    # create the docs
    - make docs
  artifacts:
    expose_as: 'Test and coverage report'
    paths:
    - htmlcov/
    - report.html
    - docs/_build/html/
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
      junit: report.xml

    expire_in: 30 days
    when: always


test_styles:
  stage: test
  script:
    - source activate ci_env
    - make lint
  artifacts:
    paths:
    # - tests/data/test_outputs/*.log  # log files are deleted by test teardown method
    - tests/linting/flake8.log
    - tests/linting/pycodestyle.log
    - tests/linting/pydocstyle.log
    when: always


test_urls:
  stage: test
  script:
    - source activate ci_env
    - pip install -U urlchecker
    - make urlcheck
  when: always


test_enpt_install:
  stage: test
  script:
    - mamba update -n base mamba conda

    # create enpt environment from environment_enpt.yml
    - mamba env create --name enpt_test -f tests/gitlab_CI_docker/context/environment_enpt.yml
    - source activate enpt_test

    # install enpt
    - pip install -e .
    - cd ..
    - pwd
    - ls

    # test importability
    - python -c "import enpt; print(enpt)"
    - python -c "from enpt.model.images import EnMAPL1Product_SensorGeo"

    # check if dependencies are properly installed
    - pip check || exit
  only:
    - main
    - dev


pages:
  stage: deploy
  dependencies:
    - test_enpt
  script:
    # Create the public directory
    - rm -rf public
    - mkdir public
    - mkdir -p public/doc
    - mkdir -p public/img
    - mkdir -p public/coverage
    - mkdir -p public/test_reports

    # Copy over the docs
    - cp -r docs/_build/html/* public/doc/
    - cp -r docs/img/* public/img/

    # Copy over the coverage reports
    - cp -r htmlcov/* public/coverage/

    # Copy over the test reports
    - cp report.html public/test_reports/

    # Check if everything is working great
    - ls -al public
    - ls -al public/doc
    - ls -al public/coverage
    - ls -al public/test_reports
  artifacts:
    paths:
      - public
    expire_in: 10 days
  only:
    - main
    - enhancement/improve_docs


deploy_pypi:
  stage: deploy
  dependencies:
    - test_enpt
  script:
    - source activate ci_env
    - pip install -U twine build
    - python -m build --sdist
    - twine check dist/*
    - twine upload dist/*  # requires creds as environment variables
  only:
    - /^v\d+\.\d+\.\d+([abc]\d*)?$/  # PEP-440 compliant version (tags)
  except:
    - dev


create_github_release:
    stage: deploy
    dependencies:
        - test_enpt
    script:
        - bash ./.github/create_release_from_gitlab_ci.sh  # uses environment variables set in the UI
    only:
        - /^v\d+\.\d+\.\d+([abc]\d*)?$/  # PEP-440 compliant version (tags)
    except:
        - dev
